#include "Block.hxx"
#include <stdlib.h>

const int PIECE_DIMS = 5;

int blocks[7][4][5][5] =
        {
                // O
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // I
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {1, 1, 1, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 1, 1},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // T
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                },

                // S
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // Z
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // L
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 1, 0},
                                {0, 1, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 1, 0},
                                {0, 1, 1, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        }
                },

                // J
                {
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 1, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 1, 0, 0, 0},
                                {0, 1, 1, 1, 0},
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 1, 1, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 1, 0, 0},
                                {0, 0, 0, 0, 0}
                        },
                        {
                                {0, 0, 0, 0, 0},
                                {0, 0, 0, 0, 0},
                                {0, 1, 1, 1, 0},
                                {0, 0, 0, 1, 0},
                                {0, 0, 0, 0, 0}
                        },
                }
        };

int starty[7][4] =
        {
                // O
                {-2, -2, -2, -2},
                // I
                {-1, -2, 0, -2},
                // T
                {-1, -1, -2, -1},
                // S
                {-1, -1, -2, -1},
                // Z
                {-1, -1, -2, -1},
                // L
                {-1, -2, -1, -1},
                // J
                {-1, -1, -1, -2}
        };


Block Block::makeRandomBlock() {
    Block block = Block();
    block.block_type = getRandomBlockType();
    block.block_color = getRandomColor();
    block.rotation = (rand() % 4);
    block.x = getStartX(block);
    block.y = getStartY(block);
    return block;
}

Block::Block()
        :x(0),
         y(0),
         rotation(0),
         block_type(),
         block_color()
{}

BlockType Block::getRandomBlockType() {
    int num = rand() % 7;
    if (num == 0) return O;
    else if (num == 1) return I;
    else if (num == 2) return T;
    else if (num == 3) return S;
    else if (num == 4) return Z;
    else if (num == 5) return L;
    else return J;
}

int Block::getCell(Block block, int u, int v) {
    return (blocks[block.block_type][block.rotation][v][u])*block.block_color;
}

int Block::getRandomColor() {
    int num = (rand() % 7) + 1;
    return num;
}


int Block::getStartX(Block block) const {

    for (int i = 0; i < PIECE_DIMS; i++) {
        for (int j = 0; j < PIECE_DIMS; j++) {
            if (block.getCell(block, i, j) != 0) {
                return 4 - i;
            }
        }
    }
    return 0;
}

int Block::getStartY(Block block) {
    return starty[block.block_type][block.rotation];
}



